class Person:
    def __init__(self, name: str, id_number: str):
        self.name = name
        self.id_number = id_number
    
    def __str__(self):
        return f'Name: {self.name}, ID: {self.id_number}'
class Student(Person):
    def __init__(self, name: str, id_number: str, major: str):
        super().__init__(name, id_number)
        self.major = major
    
    def __str__(self):
        return f'{super().__str__()}, Major: {self.major}'
class Instructor(Person):
    def __init__(self, name: str, id_number: str, department: str):
        super().__init__(name, id_number)
        self.department = department
    
    def __str__(self):
        return f'{super().__str__()}, Department: {self.department}'
class Course:
    def __init__(self, course_name: str, course_id: str):
        self.course_name = course_name
        self.course_id = course_id
        self.enrolled_students = []
    
    def add_student(self, student: Student):
        self.enrolled_students.append(student)
    
    def remove_student(self, student: Student):
        self.enrolled_students.remove(student)
    
    def __str__(self):
        return f'Course: {self.course_name}, ID: {self.course_id}, Enrolled Students: {[student.name for student in self.enrolled_students]}'
class Enrollment:
    def __init__(self, student: Student, course: Course):
        self.student = student
        self.course = course
        self.grade = None
    
    def assign_grade(self, grade: str):
        self.grade = grade
    
    def __str__(self):
        return f'Student: {self.student.name}, Course: {self.course.course_name}, Grade: {self.grade if self.grade else "Not assigned"}'

class StudentManagementSystem:
    def __init__(self):
        self.students = []
        self.instructors = []
        self.courses = []
        self.enrollments = []
    
    def add_student(self, student: Student):
        self.students.append(student)
    
    def remove_student(self, student: Student):
        self.students.remove(student)
    
    def update_student(self, student_id: str, name=None, major=None):
        for student in self.students:
            if student.id_number == student_id:
                if name:
                    student.name = name
                if major:
                    student.major = major
                break
    
    def add_instructor(self, instructor: Instructor):
        self.instructors.append(instructor)
    
    def remove_instructor(self, instructor: Instructor):
        self.instructors.remove(instructor)
    
    def update_instructor(self, instructor_id: str, name=None, department=None):
        for instructor in self.instructors:
            if instructor.id_number == instructor_id:
                if name:
                    instructor.name = name
                if department:
                    instructor.department = department
                break
    
    def add_course(self, course: Course):
        self.courses.append(course)
    
    def remove_course(self, course: Course):
        self.courses.remove(course)
    
    def update_course(self, course_id: str, course_name=None):
        for course in self.courses:
            if course.course_id == course_id:
                if course_name:
                    course.course_name = course_name
                break
    
    def enroll_student(self, student: Student, course: Course):
        enrollment = Enrollment(student, course)
        self.enrollments.append(enrollment)
        course.add_student(student)
    
    def assign_grade(self, student_id: str, course_id: str, grade: str):
        for enrollment in self.enrollments:
            if enrollment.student.id_number == student_id and enrollment.course.course_id == course_id:
                enrollment.assign_grade(grade)
                break
    
    def get_students_in_course(self, course_id: str):
        for course in self.courses:
            if course.course_id == course_id:
                return course.enrolled_students
    
    def get_courses_for_student(self, student_id: str):
        student_courses = []
        for enrollment in self.enrollments:
            if enrollment.student.id_number == student_id:
                student_courses.append(enrollment.course)
        return student_courses


